# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Make Gradle executable
        run: |
          ls -la ./jashter
          cd ./jashter
          chmod +x ./gradlew
      - name: Build with Gradle (Skip test)
        run: |
          cd ./jashter
          ./gradlew build -x test
      - name: Deploy
        run: |
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          ls ./jashter/build/libs
          scp -i ~/.ssh/id_rsa -p $SSH_PORT ./jashter/build/libs/jashter-0.0.1-SNAPSHOT.jar $SSH_USER@$SSH_HOST:$DEPLOY_DIR
          ssh -i ~/.ssh/id_rsa -p $SSH_PORT -l $SSH_USER $SSH_HOST deploy.sh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{secrets.SSH_HOST}}
          SSH_USER: ${{secrets.SSH_USER}}
          SSH_PORT: ${{secrets.SSH_PORT}}
          DEPLOY_DIR: ${{secrets.DEPLOY_DIR}}

